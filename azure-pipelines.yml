trigger:
  tags:
    include:
    - '*'
  branches:
    include:
    - '*'

jobs:
- job: Build
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - task: PowerShell@2
      displayName: Download Bonjour SDK-like
      inputs:
        filePath: azure-pipelines/download_install_bonjour_sdk_like.ps1
    - task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
      displayName: Restore QT Cache, if available
      inputs:
        keyfile: 'azure-pipelines/download_install_qt.ps1, azure-pipelines/qtifwsilent.qs'
        targetfolder: 'deps/Qt/Qt5.12.3/5.12.3'
        vstsFeed: '$(ArtifactFeed)'
    - task: PowerShell@2
      displayName: Installing QT
      condition: ne(variables['CacheRestored'], 'true')
      inputs:
        filePath: azure-pipelines/download_install_qt.ps1
    - task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
      displayName: Saving QT Cache
      inputs:
        keyfile: 'azure-pipelines/download_install_qt.ps1, azure-pipelines/qtifwsilent.qs'
        targetfolder: 'deps/Qt/Qt5.12.3/5.12.3'
        vstsFeed: '$(ArtifactFeed)'
        condition: and(succeeded(), ne(variables['CacheRestored'], 'true'))
    - script: choco install innosetup --version 5.6.1
      displayName: Install Inno Setup
    - powershell: Copy-Item azure-pipelines\build_env_tmpl.bat build_env.bat
      displayName: Layering Azure Pipeline's build_env.bat
    - script: |
          call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\vsdevcmd" -arch=x64 && clean_build.bat
      displayName: clean_build.bat    